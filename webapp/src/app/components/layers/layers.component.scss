@use '@angular/material' as mat;
@import "theme";

$config: mat.define-typography-config();
$background: map_get($theme, "background");

mat-expansion-panel-header {
	background-color: rgba(255, 255, 255, 0.1) !important;
}

// layer selection
$type-hue: A200;

// hidden layers brightness reduction
$brightness: 60%;

.type-Background {
	background-color: mat.get-color-from-palette(mat.$green-palette, $type-hue);
}

.type-Collision {
	background-color: mat.get-color-from-palette(mat.$red-palette, $type-hue);
}

.type-Navigation {
	background-color: mat.get-color-from-palette(mat.$blue-palette, $type-hue);
}

.type-HeightMap {
	background-color: mat.get-color-from-palette(mat.$orange-palette, $type-hue);
}

.type-Light {
	background-color: mat.get-color-from-palette(mat.$yellow-palette, $type-hue);
}

.layer-icon {
	width: 32px;
	height: 32px;
	border-radius: 16px;
}

.item-selected-bg {
	position: absolute;
	left: 0;
	z-index: -1;
	width: 100%;
	height: 100%;
	transition: background-color 100ms linear;
}

// firefox fix
.item-selected-bg {
	top: 0;
}

.item-selected {
	background-color: mat.get-color-from-palette(mat.$grey-palette, 700);
}

mat-nav-list {
	padding-top: 0 !important;
	overflow-x: hidden;
	//noinspection CssInvalidPropertyValue
	overflow-y: overlay;
}

.small-list {
	min-height: 80px !important;

	& mat-list-item, .mat-list-item-content {
		height: 36px !important;
	}
}

.layers-tab-container {
	height: 100%;
}

.mat-expansion-panel-body {
	padding: 0 !important;
}

// layer settings
.settings-list {
}

.label {
	flex: 0 0 80px;
	@include mat.icon-button-density(-3);
}

.list-item {
	//padding-left: 16px;
	width: 100%;
}

.size-prefix {
	margin-left: 6px;
}

.simple-input {
	padding-bottom: 5px !important;
	box-shadow: inset 0px -1px 0px 0px rgb(255, 255, 255);
}

.layer-hidden {
	filter: brightness($brightness);
}

/* Animate items as they're being sorted. */
.cdk-drop-list-dragging .cdk-drag {
	transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

/* Animate an item that has been dropped. */
.cdk-drag-animating {
	transition: transform 300ms cubic-bezier(0, 0, 0.2, 1);
}
